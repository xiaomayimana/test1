/**
 * generated by Xtext
 */
package person.zhoujg.ui.outline;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import person.zhoujg.feature.Feature;
import person.zhoujg.feature.FeatureBody;
import person.zhoujg.feature.RuleBody;

/**
 * Customization of the default outline structure.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#outline
 */
@SuppressWarnings("all")
public class FeatureOutlineTreeProvider extends DefaultOutlineTreeProvider {
  @Override
  protected void _createChildren(final IOutlineNode parentNode, final EObject modelElement) {
    boolean _matched = false;
    if (!_matched) {
      if (modelElement instanceof Feature) {
        _matched=true;
        FeatureBody _body = ((Feature)modelElement).getBody();
        EList<EObject> _eContents = _body.eContents();
        for (final EObject obj : _eContents) {
          if ((obj instanceof RuleBody)) {
          } else {
            this.createNode(parentNode, obj);
          }
        }
      }
    }
    if (!_matched) {
      super._createChildren(parentNode, modelElement);
    }
  }
}
