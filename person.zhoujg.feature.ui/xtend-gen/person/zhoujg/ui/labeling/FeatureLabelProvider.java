/**
 * generated by Xtext
 */
package person.zhoujg.ui.labeling;

import com.google.common.base.Objects;
import com.google.inject.Inject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.swt.graphics.Image;
import org.eclipse.xtext.ui.PluginImageHelper;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import person.zhoujg.feature.AttributePart;
import person.zhoujg.feature.Feature;
import person.zhoujg.feature.RuleBody;
import person.zhoujg.util.FeatureUtil;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
@SuppressWarnings("all")
public class FeatureLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public FeatureLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  @Inject
  private PluginImageHelper imageHelper;
  
  public String text(final Feature ele) {
    String _xifexpression = null;
    String _name = ele.getName();
    boolean _equals = Objects.equal(_name, null);
    if (_equals) {
      Feature _ref = ele.getRef();
      _xifexpression = _ref.getName();
    } else {
      _xifexpression = ele.getName();
    }
    return _xifexpression;
  }
  
  public String text(final AttributePart ele) {
    return "attributes";
  }
  
  public String text(final RuleBody ele) {
    return "rules";
  }
  
  public Image image(final Feature ele) {
    Image _xifexpression = null;
    boolean _isAttribute = FeatureUtil.isAttribute(ele);
    if (_isAttribute) {
      _xifexpression = this.imageHelper.getImage("attribute.gif");
    } else {
      _xifexpression = this.imageHelper.getImage("feature.gif");
    }
    return _xifexpression;
  }
  
  public Image image(final AttributePart ap) {
    return this.imageHelper.getImage("attributes.gif");
  }
}
