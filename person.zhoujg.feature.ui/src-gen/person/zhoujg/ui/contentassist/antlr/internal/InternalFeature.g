/*
 * generated by Xtext
 */
grammar InternalFeature;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package person.zhoujg.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package person.zhoujg.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import person.zhoujg.services.FeatureGrammarAccess;

}

@parser::members {
 
 	private FeatureGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FeatureGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRootDeclaration
entryRuleRootDeclaration 
:
{ before(grammarAccess.getRootDeclarationRule()); }
	 ruleRootDeclaration
{ after(grammarAccess.getRootDeclarationRule()); } 
	 EOF 
;

// Rule RootDeclaration
ruleRootDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootDeclarationAccess().getGroup()); }
(rule__RootDeclaration__Group__0)
{ after(grammarAccess.getRootDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureDeclaration
entryRuleFeatureDeclaration 
:
{ before(grammarAccess.getFeatureDeclarationRule()); }
	 ruleFeatureDeclaration
{ after(grammarAccess.getFeatureDeclarationRule()); } 
	 EOF 
;

// Rule FeatureDeclaration
ruleFeatureDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getGroup()); }
(rule__FeatureDeclaration__Group__0)
{ after(grammarAccess.getFeatureDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureBody
entryRuleFeatureBody 
:
{ before(grammarAccess.getFeatureBodyRule()); }
	 ruleFeatureBody
{ after(grammarAccess.getFeatureBodyRule()); } 
	 EOF 
;

// Rule FeatureBody
ruleFeatureBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureBodyAccess().getGroup()); }
(rule__FeatureBody__Group__0)
{ after(grammarAccess.getFeatureBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStandaloneCardinality
entryRuleStandaloneCardinality 
:
{ before(grammarAccess.getStandaloneCardinalityRule()); }
	 ruleStandaloneCardinality
{ after(grammarAccess.getStandaloneCardinalityRule()); } 
	 EOF 
;

// Rule StandaloneCardinality
ruleStandaloneCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStandaloneCardinalityAccess().getAlternatives()); }
(rule__StandaloneCardinality__Alternatives)
{ after(grammarAccess.getStandaloneCardinalityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroupCardinality
entryRuleGroupCardinality 
:
{ before(grammarAccess.getGroupCardinalityRule()); }
	 ruleGroupCardinality
{ after(grammarAccess.getGroupCardinalityRule()); } 
	 EOF 
;

// Rule GroupCardinality
ruleGroupCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getGroupCardinalityAccess().getGroup()); }
(rule__GroupCardinality__Group__0)
{ after(grammarAccess.getGroupCardinalityAccess().getGroup()); }
)
(
{ before(grammarAccess.getGroupCardinalityAccess().getGroup()); }
(rule__GroupCardinality__Group__0)*
{ after(grammarAccess.getGroupCardinalityAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributePart
entryRuleAttributePart 
:
{ before(grammarAccess.getAttributePartRule()); }
	 ruleAttributePart
{ after(grammarAccess.getAttributePartRule()); } 
	 EOF 
;

// Rule AttributePart
ruleAttributePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributePartAccess().getGroup()); }
(rule__AttributePart__Group__0)
{ after(grammarAccess.getAttributePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleBody
entryRuleRuleBody 
:
{ before(grammarAccess.getRuleBodyRule()); }
	 ruleRuleBody
{ after(grammarAccess.getRuleBodyRule()); } 
	 EOF 
;

// Rule RuleBody
ruleRuleBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleBodyAccess().getGroup()); }
(rule__RuleBody__Group__0)
{ after(grammarAccess.getRuleBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureExpr
entryRuleFeatureExpr 
:
{ before(grammarAccess.getFeatureExprRule()); }
	 ruleFeatureExpr
{ after(grammarAccess.getFeatureExprRule()); } 
	 EOF 
;

// Rule FeatureExpr
ruleFeatureExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureExprAccess().getGroup()); }
(rule__FeatureExpr__Group__0)
{ after(grammarAccess.getFeatureExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicExpr
entryRuleLogicExpr 
:
{ before(grammarAccess.getLogicExprRule()); }
	 ruleLogicExpr
{ after(grammarAccess.getLogicExprRule()); } 
	 EOF 
;

// Rule LogicExpr
ruleLogicExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicExprAccess().getGroup()); }
(rule__LogicExpr__Group__0)
{ after(grammarAccess.getLogicExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicExpr
entryRuleBasicExpr 
:
{ before(grammarAccess.getBasicExprRule()); }
	 ruleBasicExpr
{ after(grammarAccess.getBasicExprRule()); } 
	 EOF 
;

// Rule BasicExpr
ruleBasicExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicExprAccess().getGroup()); }
(rule__BasicExpr__Group__0)
{ after(grammarAccess.getBasicExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtom
entryRuleAtom 
:
{ before(grammarAccess.getAtomRule()); }
	 ruleAtom
{ after(grammarAccess.getAtomRule()); } 
	 EOF 
;

// Rule Atom
ruleAtom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomAccess().getAlternatives()); }
(rule__Atom__Alternatives)
{ after(grammarAccess.getAtomAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBOOL
entryRuleBOOL 
:
{ before(grammarAccess.getBOOLRule()); }
	 ruleBOOL
{ after(grammarAccess.getBOOLRule()); } 
	 EOF 
;

// Rule BOOL
ruleBOOL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBOOLAccess().getAlternatives()); }
(rule__BOOL__Alternatives)
{ after(grammarAccess.getBOOLAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule AttributeType
ruleAttributeType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
(rule__AttributeType__Alternatives)
{ after(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ComparationOP
ruleComparationOP
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparationOPAccess().getAlternatives()); }
(rule__ComparationOP__Alternatives)
{ after(grammarAccess.getComparationOPAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule FeatureOP
ruleFeatureOP
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureOPAccess().getAlternatives()); }
(rule__FeatureOP__Alternatives)
{ after(grammarAccess.getFeatureOPAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicOP
ruleLogicOP
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOPAccess().getAlternatives()); }
(rule__LogicOP__Alternatives)
{ after(grammarAccess.getLogicOPAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__FeatureDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getGroup_1_0()); }
(rule__FeatureDeclaration__Group_1_0__0)
{ after(grammarAccess.getFeatureDeclarationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getFeatureDeclarationAccess().getGroup_1_1()); }
(rule__FeatureDeclaration__Group_1_1__0)
{ after(grammarAccess.getFeatureDeclarationAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneCardinality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStandaloneCardinalityAccess().getGroup_0()); }
(rule__StandaloneCardinality__Group_0__0)
{ after(grammarAccess.getStandaloneCardinalityAccess().getGroup_0()); }
)
(
{ before(grammarAccess.getStandaloneCardinalityAccess().getGroup_0()); }
(rule__StandaloneCardinality__Group_0__0)*
{ after(grammarAccess.getStandaloneCardinalityAccess().getGroup_0()); }
)
)

    |(
{ before(grammarAccess.getStandaloneCardinalityAccess().getOptKeyword_1()); }

	'opt' 

{ after(grammarAccess.getStandaloneCardinalityAccess().getOptKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpr__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExprAccess().getExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getLogicExprAccess().getExclamationMarkKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getLogicExprAccess().getNotKeyword_0_1()); }

	'not' 

{ after(grammarAccess.getLogicExprAccess().getNotKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getLiteralAssignment_0()); }
(rule__Atom__LiteralAssignment_0)
{ after(grammarAccess.getAtomAccess().getLiteralAssignment_0()); }
)

    |(
{ before(grammarAccess.getAtomAccess().getGroup_1()); }
(rule__Atom__Group_1__0)
{ after(grammarAccess.getAtomAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getStrAssignment_0()); }
(rule__Literal__StrAssignment_0)
{ after(grammarAccess.getLiteralAccess().getStrAssignment_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getIntAssignment_1()); }
(rule__Literal__IntAssignment_1)
{ after(grammarAccess.getLiteralAccess().getIntAssignment_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBoolAssignment_2()); }
(rule__Literal__BoolAssignment_2)
{ after(grammarAccess.getLiteralAccess().getBoolAssignment_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNameAssignment_3()); }
(rule__Literal__NameAssignment_3)
{ after(grammarAccess.getLiteralAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBOOLAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBOOLAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBOOLAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getIntEnumLiteralDeclaration_0()); }
(	'int' 
)
{ after(grammarAccess.getAttributeTypeAccess().getIntEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_1()); }
(	'string' 
)
{ after(grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getBoolEnumLiteralDeclaration_2()); }
(	'bool' 
)
{ after(grammarAccess.getAttributeTypeAccess().getBoolEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparationOP__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparationOPAccess().getGTEnumLiteralDeclaration_0()); }
(	'>' 
)
{ after(grammarAccess.getComparationOPAccess().getGTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getComparationOPAccess().getGEEnumLiteralDeclaration_1()); }
(	'>=' 
)
{ after(grammarAccess.getComparationOPAccess().getGEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getComparationOPAccess().getEQEnumLiteralDeclaration_2()); }
(	'==' 
)
{ after(grammarAccess.getComparationOPAccess().getEQEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getComparationOPAccess().getLTEnumLiteralDeclaration_3()); }
(	'<' 
)
{ after(grammarAccess.getComparationOPAccess().getLTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getComparationOPAccess().getLEEnumLiteralDeclaration_4()); }
(	'<=' 
)
{ after(grammarAccess.getComparationOPAccess().getLEEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getComparationOPAccess().getNEEnumLiteralDeclaration_5()); }
(	'<>' 
)
{ after(grammarAccess.getComparationOPAccess().getNEEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureOP__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureOPAccess().getRECEnumLiteralDeclaration_0()); }
(	'recommend' 
)
{ after(grammarAccess.getFeatureOPAccess().getRECEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFeatureOPAccess().getREQEnumLiteralDeclaration_1()); }
(	'require' 
)
{ after(grammarAccess.getFeatureOPAccess().getREQEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFeatureOPAccess().getEXCEnumLiteralDeclaration_2()); }
(	'exclude' 
)
{ after(grammarAccess.getFeatureOPAccess().getEXCEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFeatureOPAccess().getHAREnumLiteralDeclaration_3()); }
(	'harm' 
)
{ after(grammarAccess.getFeatureOPAccess().getHAREnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFeatureOPAccess().getREQEnumLiteralDeclaration_4()); }
(	'->' 
)
{ after(grammarAccess.getFeatureOPAccess().getREQEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getFeatureOPAccess().getEXCEnumLiteralDeclaration_5()); }
(	'<->' 
)
{ after(grammarAccess.getFeatureOPAccess().getEXCEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOP__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOPAccess().getANDEnumLiteralDeclaration_0()); }
(	'and' 
)
{ after(grammarAccess.getLogicOPAccess().getANDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLogicOPAccess().getOREnumLiteralDeclaration_1()); }
(	'or' 
)
{ after(grammarAccess.getLogicOPAccess().getOREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getLogicOPAccess().getANDEnumLiteralDeclaration_2()); }
(	'&&' 
)
{ after(grammarAccess.getLogicOPAccess().getANDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getLogicOPAccess().getOREnumLiteralDeclaration_3()); }
(	'||' 
)
{ after(grammarAccess.getLogicOPAccess().getOREnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RootDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootDeclaration__Group__0__Impl
	rule__RootDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootDeclarationAccess().getRootKeyword_0()); }

	'root' 

{ after(grammarAccess.getRootDeclarationAccess().getRootKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootDeclaration__Group__1__Impl
	rule__RootDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootDeclarationAccess().getNameAssignment_1()); }
(rule__RootDeclaration__NameAssignment_1)
{ after(grammarAccess.getRootDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootDeclaration__Group__2__Impl
	rule__RootDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootDeclarationAccess().getInCardAssignment_2()); }
(rule__RootDeclaration__InCardAssignment_2)?
{ after(grammarAccess.getRootDeclarationAccess().getInCardAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootDeclarationAccess().getBodyAssignment_3()); }
(rule__RootDeclaration__BodyAssignment_3)?
{ after(grammarAccess.getRootDeclarationAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeatureDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureDeclaration__Group__0__Impl
	rule__FeatureDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getOutCardAssignment_0()); }
(rule__FeatureDeclaration__OutCardAssignment_0)?
{ after(grammarAccess.getFeatureDeclarationAccess().getOutCardAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureDeclaration__Group__1__Impl
	rule__FeatureDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1()); }
(rule__FeatureDeclaration__Alternatives_1)
{ after(grammarAccess.getFeatureDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureDeclaration__Group__2__Impl
	rule__FeatureDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getInCardAssignment_2()); }
(rule__FeatureDeclaration__InCardAssignment_2)?
{ after(grammarAccess.getFeatureDeclarationAccess().getInCardAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getBodyAssignment_3()); }
(rule__FeatureDeclaration__BodyAssignment_3)?
{ after(grammarAccess.getFeatureDeclarationAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeatureDeclaration__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureDeclaration__Group_1_0__0__Impl
	rule__FeatureDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getFeatureKeyword_1_0_0()); }

	'feature' 

{ after(grammarAccess.getFeatureDeclarationAccess().getFeatureKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureDeclaration__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getNameAssignment_1_0_1()); }
(rule__FeatureDeclaration__NameAssignment_1_0_1)
{ after(grammarAccess.getFeatureDeclarationAccess().getNameAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureDeclaration__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureDeclaration__Group_1_1__0__Impl
	rule__FeatureDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getRefKeyword_1_1_0()); }

	'ref' 

{ after(grammarAccess.getFeatureDeclarationAccess().getRefKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureDeclaration__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureDeclaration__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getRefAssignment_1_1_1()); }
(rule__FeatureDeclaration__RefAssignment_1_1_1)
{ after(grammarAccess.getFeatureDeclarationAccess().getRefAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureBody__Group__0__Impl
	rule__FeatureBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getFeatureBodyAction_0()); }
(

)
{ after(grammarAccess.getFeatureBodyAccess().getFeatureBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureBody__Group__1__Impl
	rule__FeatureBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getFeatureBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureBody__Group__2__Impl
	rule__FeatureBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getAttrsAssignment_2()); }
(rule__FeatureBody__AttrsAssignment_2)?
{ after(grammarAccess.getFeatureBodyAccess().getAttrsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureBody__Group__3__Impl
	rule__FeatureBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getFeaturesAssignment_3()); }
(rule__FeatureBody__FeaturesAssignment_3)*
{ after(grammarAccess.getFeatureBodyAccess().getFeaturesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureBody__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureBody__Group__4__Impl
	rule__FeatureBody__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getGroup_4()); }
(rule__FeatureBody__Group_4__0)?
{ after(grammarAccess.getFeatureBodyAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureBody__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureBody__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getFeatureBodyAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FeatureBody__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureBody__Group_4__0__Impl
	rule__FeatureBody__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getRulesKeyword_4_0()); }
(
	'rules' 
)
{ after(grammarAccess.getFeatureBodyAccess().getRulesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureBody__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureBody__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getRuleBodyAssignment_4_1()); }
(rule__FeatureBody__RuleBodyAssignment_4_1)
{ after(grammarAccess.getFeatureBodyAccess().getRuleBodyAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StandaloneCardinality__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandaloneCardinality__Group_0__0__Impl
	rule__StandaloneCardinality__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneCardinality__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandaloneCardinalityAccess().getLeftSquareBracketKeyword_0_0()); }

	'[' 

{ after(grammarAccess.getStandaloneCardinalityAccess().getLeftSquareBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandaloneCardinality__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandaloneCardinality__Group_0__1__Impl
	rule__StandaloneCardinality__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneCardinality__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandaloneCardinalityAccess().getINTTerminalRuleCall_0_1()); }
	RULE_INT
{ after(grammarAccess.getStandaloneCardinalityAccess().getINTTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandaloneCardinality__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandaloneCardinality__Group_0__2__Impl
	rule__StandaloneCardinality__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneCardinality__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandaloneCardinalityAccess().getGroup_0_2()); }
(rule__StandaloneCardinality__Group_0_2__0)?
{ after(grammarAccess.getStandaloneCardinalityAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandaloneCardinality__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandaloneCardinality__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneCardinality__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandaloneCardinalityAccess().getRightSquareBracketKeyword_0_3()); }

	']' 

{ after(grammarAccess.getStandaloneCardinalityAccess().getRightSquareBracketKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StandaloneCardinality__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandaloneCardinality__Group_0_2__0__Impl
	rule__StandaloneCardinality__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneCardinality__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandaloneCardinalityAccess().getFullStopFullStopKeyword_0_2_0()); }

	'..' 

{ after(grammarAccess.getStandaloneCardinalityAccess().getFullStopFullStopKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandaloneCardinality__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandaloneCardinality__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandaloneCardinality__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandaloneCardinalityAccess().getINTTerminalRuleCall_0_2_1()); }
	RULE_INT
{ after(grammarAccess.getStandaloneCardinalityAccess().getINTTerminalRuleCall_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GroupCardinality__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupCardinality__Group__0__Impl
	rule__GroupCardinality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupCardinality__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupCardinalityAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getGroupCardinalityAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupCardinality__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupCardinality__Group__1__Impl
	rule__GroupCardinality__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupCardinality__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupCardinalityAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getGroupCardinalityAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupCardinality__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupCardinality__Group__2__Impl
	rule__GroupCardinality__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupCardinality__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupCardinalityAccess().getGroup_2()); }
(rule__GroupCardinality__Group_2__0)?
{ after(grammarAccess.getGroupCardinalityAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupCardinality__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupCardinality__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupCardinality__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupCardinalityAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getGroupCardinalityAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GroupCardinality__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupCardinality__Group_2__0__Impl
	rule__GroupCardinality__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupCardinality__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupCardinalityAccess().getFullStopFullStopKeyword_2_0()); }

	'..' 

{ after(grammarAccess.getGroupCardinalityAccess().getFullStopFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupCardinality__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupCardinality__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupCardinality__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupCardinalityAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getGroupCardinalityAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributePart__Group__0__Impl
	rule__AttributePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePartAccess().getAttributePartAction_0()); }
(

)
{ after(grammarAccess.getAttributePartAccess().getAttributePartAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributePart__Group__1__Impl
	rule__AttributePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePartAccess().getAttrsKeyword_1()); }

	'attrs {' 

{ after(grammarAccess.getAttributePartAccess().getAttrsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributePart__Group__2__Impl
	rule__AttributePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePartAccess().getAttrAssignment_2()); }
(rule__AttributePart__AttrAssignment_2)*
{ after(grammarAccess.getAttributePartAccess().getAttrAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributePart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePartAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getAttributePartAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RuleBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleBody__Group__0__Impl
	rule__RuleBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleBodyAccess().getRuleBodyAction_0()); }
(

)
{ after(grammarAccess.getRuleBodyAccess().getRuleBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleBody__Group__1__Impl
	rule__RuleBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleBodyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getRuleBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleBody__Group__2__Impl
	rule__RuleBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleBodyAccess().getRulesAssignment_2()); }
(rule__RuleBody__RulesAssignment_2)*
{ after(grammarAccess.getRuleBodyAccess().getRulesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleBodyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getRuleBodyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_0()); }
(rule__Attribute__TypeAssignment_0)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureExpr__Group__0__Impl
	rule__FeatureExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureExprAccess().getLeftAssignment_0()); }
(rule__FeatureExpr__LeftAssignment_0)
{ after(grammarAccess.getFeatureExprAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureExpr__Group__1__Impl
	rule__FeatureExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureExprAccess().getOpAssignment_1()); }
(rule__FeatureExpr__OpAssignment_1)
{ after(grammarAccess.getFeatureExprAccess().getOpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureExprAccess().getRightAssignment_2()); }
(rule__FeatureExpr__RightAssignment_2)
{ after(grammarAccess.getFeatureExprAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LogicExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExpr__Group__0__Impl
	rule__LogicExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExprAccess().getAlternatives_0()); }
(rule__LogicExpr__Alternatives_0)?
{ after(grammarAccess.getLogicExprAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExpr__Group__1__Impl
	rule__LogicExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExprAccess().getLeftLogicExprAssignment_1()); }
(rule__LogicExpr__LeftLogicExprAssignment_1)
{ after(grammarAccess.getLogicExprAccess().getLeftLogicExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExprAccess().getGroup_2()); }
(rule__LogicExpr__Group_2__0)*
{ after(grammarAccess.getLogicExprAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LogicExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExpr__Group_2__0__Impl
	rule__LogicExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExprAccess().getLogicExprLeftLogicExprAction_2_0()); }
(

)
{ after(grammarAccess.getLogicExprAccess().getLogicExprLeftLogicExprAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExpr__Group_2__1__Impl
	rule__LogicExpr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExprAccess().getLogicOPAssignment_2_1()); }
(rule__LogicExpr__LogicOPAssignment_2_1)
{ after(grammarAccess.getLogicExprAccess().getLogicOPAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExpr__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicExpr__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpr__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExprAccess().getRightAssignment_2_2()); }
(rule__LogicExpr__RightAssignment_2_2)
{ after(grammarAccess.getLogicExprAccess().getRightAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BasicExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicExpr__Group__0__Impl
	rule__BasicExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getLExprAssignment_0()); }
(rule__BasicExpr__LExprAssignment_0)
{ after(grammarAccess.getBasicExprAccess().getLExprAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getGroup_1()); }
(rule__BasicExpr__Group_1__0)?
{ after(grammarAccess.getBasicExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BasicExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicExpr__Group_1__0__Impl
	rule__BasicExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getCompOpAssignment_1_0()); }
(rule__BasicExpr__CompOpAssignment_1_0)
{ after(grammarAccess.getBasicExprAccess().getCompOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getRExprAssignment_1_1()); }
(rule__BasicExpr__RExprAssignment_1_1)
{ after(grammarAccess.getBasicExprAccess().getRExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atom__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1__0__Impl
	rule__Atom__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1__1__Impl
	rule__Atom__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getSubAssignment_1_1()); }
(rule__Atom__SubAssignment_1_1)
{ after(grammarAccess.getAtomAccess().getSubAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__RootDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRootDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__InCardAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootDeclarationAccess().getInCardGroupCardinalityParserRuleCall_2_0()); }
	ruleGroupCardinality{ after(grammarAccess.getRootDeclarationAccess().getInCardGroupCardinalityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootDeclarationAccess().getBodyFeatureBodyParserRuleCall_3_0()); }
	ruleFeatureBody{ after(grammarAccess.getRootDeclarationAccess().getBodyFeatureBodyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__OutCardAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getOutCardStandaloneCardinalityParserRuleCall_0_0()); }
	ruleStandaloneCardinality{ after(grammarAccess.getFeatureDeclarationAccess().getOutCardStandaloneCardinalityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__NameAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getNameIDTerminalRuleCall_1_0_1_0()); }
	RULE_ID{ after(grammarAccess.getFeatureDeclarationAccess().getNameIDTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__RefAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getRefFeatureCrossReference_1_1_1_0()); }
(
{ before(grammarAccess.getFeatureDeclarationAccess().getRefFeatureIDTerminalRuleCall_1_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFeatureDeclarationAccess().getRefFeatureIDTerminalRuleCall_1_1_1_0_1()); }
)
{ after(grammarAccess.getFeatureDeclarationAccess().getRefFeatureCrossReference_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__InCardAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getInCardGroupCardinalityParserRuleCall_2_0()); }
	ruleGroupCardinality{ after(grammarAccess.getFeatureDeclarationAccess().getInCardGroupCardinalityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDeclaration__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDeclarationAccess().getBodyFeatureBodyParserRuleCall_3_0()); }
	ruleFeatureBody{ after(grammarAccess.getFeatureDeclarationAccess().getBodyFeatureBodyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__AttrsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getAttrsAttributePartParserRuleCall_2_0()); }
	ruleAttributePart{ after(grammarAccess.getFeatureBodyAccess().getAttrsAttributePartParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__FeaturesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getFeaturesFeatureDeclarationParserRuleCall_3_0()); }
	ruleFeatureDeclaration{ after(grammarAccess.getFeatureBodyAccess().getFeaturesFeatureDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureBody__RuleBodyAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureBodyAccess().getRuleBodyRuleBodyParserRuleCall_4_1_0()); }
	ruleRuleBody{ after(grammarAccess.getFeatureBodyAccess().getRuleBodyRuleBodyParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributePart__AttrAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributePartAccess().getAttrAttributeParserRuleCall_2_0()); }
	ruleAttribute{ after(grammarAccess.getAttributePartAccess().getAttrAttributeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBody__RulesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleBodyAccess().getRulesFeatureExprParserRuleCall_2_0()); }
	ruleFeatureExpr{ after(grammarAccess.getRuleBodyAccess().getRulesFeatureExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAttributeTypeEnumRuleCall_0_0()); }
	ruleAttributeType{ after(grammarAccess.getAttributeAccess().getTypeAttributeTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureExpr__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureExprAccess().getLeftLogicExprParserRuleCall_0_0()); }
	ruleLogicExpr{ after(grammarAccess.getFeatureExprAccess().getLeftLogicExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureExpr__OpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureExprAccess().getOpFeatureOPEnumRuleCall_1_0()); }
	ruleFeatureOP{ after(grammarAccess.getFeatureExprAccess().getOpFeatureOPEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureExpr__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureExprAccess().getRightLogicExprParserRuleCall_2_0()); }
	ruleLogicExpr{ after(grammarAccess.getFeatureExprAccess().getRightLogicExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpr__LeftLogicExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExprAccess().getLeftLogicExprBasicExprParserRuleCall_1_0()); }
	ruleBasicExpr{ after(grammarAccess.getLogicExprAccess().getLeftLogicExprBasicExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpr__LogicOPAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExprAccess().getLogicOPLogicOPEnumRuleCall_2_1_0()); }
	ruleLogicOP{ after(grammarAccess.getLogicExprAccess().getLogicOPLogicOPEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpr__RightAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicExprAccess().getRightBasicExprParserRuleCall_2_2_0()); }
	ruleBasicExpr{ after(grammarAccess.getLogicExprAccess().getRightBasicExprParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__LExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getLExprAtomParserRuleCall_0_0()); }
	ruleAtom{ after(grammarAccess.getBasicExprAccess().getLExprAtomParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__CompOpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getCompOpComparationOPEnumRuleCall_1_0_0()); }
	ruleComparationOP{ after(grammarAccess.getBasicExprAccess().getCompOpComparationOPEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__RExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicExprAccess().getRExprAtomParserRuleCall_1_1_0()); }
	ruleAtom{ after(grammarAccess.getBasicExprAccess().getRExprAtomParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__LiteralAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getLiteralLiteralParserRuleCall_0_0()); }
	ruleLiteral{ after(grammarAccess.getAtomAccess().getLiteralLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__SubAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getSubLogicExprParserRuleCall_1_1_0()); }
	ruleLogicExpr{ after(grammarAccess.getAtomAccess().getSubLogicExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__StrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getStrSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getLiteralAccess().getStrSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__IntAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getIntINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getLiteralAccess().getIntINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__BoolAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getBoolBOOLParserRuleCall_2_0()); }
	ruleBOOL{ after(grammarAccess.getLiteralAccess().getBoolBOOLParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNameFeatureCrossReference_3_0()); }
(
{ before(grammarAccess.getLiteralAccess().getNameFeatureQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getLiteralAccess().getNameFeatureQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getLiteralAccess().getNameFeatureCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


