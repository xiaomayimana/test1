/*
* generated by Xtext
*/
package person.zhoujg.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.PluginImageHelper
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import person.zhoujg.feature.AttributePart
import person.zhoujg.feature.Feature
import person.zhoujg.feature.RuleBody
import static extension person.zhoujg.util.FeatureUtil.isAttribute
/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class FeatureLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
	
	@Inject
	private PluginImageHelper imageHelper

	// Labels and icons can be computed like this:
	
	def text(Feature ele) {
		if (ele.name == null){
			ele.ref.name
		}else{
			ele.name		
		}
	}
	
	def text(AttributePart ele){
		'attributes'
	}
	
	def text(RuleBody ele){
		'rules'
	}

	def image(Feature ele) {
		if (ele.attribute){
			imageHelper.getImage('attribute.gif')
		}else{
			imageHelper.getImage('feature.gif')
		}	
					
	}
	
	def image(AttributePart ap){
		imageHelper.getImage('attributes.gif')
	}
}
