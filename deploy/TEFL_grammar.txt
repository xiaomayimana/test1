RootDeclaration			::= "root" name = ID GroupCardinality? FeatureBody?
FeatureDeclaration 		::=	StandaloneCardinality? "feature" ID GroupCardinality? FeatureBody?
FeatureBody				::= "{"
								AttributePart?
								FeatureDeclaration*
								RulePart?
							"}"
StandaloneCardinality	::= ("["  INT (".." INT)? "]")+ | "opt"
GroupCardinality		::= ("<" INT (".." INT)? ">")+
AttributePart			::= "attrs {"
								Attribute*
							"}"
RulePart				::= "rules {"
								FeatureExpr*
							"}"
Attribute				::= TYPE ID
TYPE					::= "int" | "string" | "real" | "bool"
FeatureExpr				::= LogicExpr CompsitionOp LogicExpr
LogicExpr				::= ("!" | "not") LogicExpr |
							BasicExpr LogicOp BasicExpr 
BasicExpr				::= "(" LogicExpr ")" |
							Atom CompOp Atom
Atom					::= STRING | Number | BOOL | QualifiedName
CompositionOp			::= "recommend" | "require" | "exclude" | "harm" | "->" | "<->"
LogicOp					::= "and" | "or" | "&&" | "||"
ComparationOp			::= ">" | ">=" | "==" | "<" | "<=" | "<>"
Number					::= INT ("." INT)*
BOOL					::= "true" | "false"
QualifiedName			::= ID ("." ID)*
ID						::= '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
STRING					::= '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
							"'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"							
INT						::= ('0'..'9')+							
							